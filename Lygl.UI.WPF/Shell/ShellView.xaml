<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
    xmlns:cal1="http://www.caliburnproject.org"
         x:Class="Lygl.UI.Shell.ShellView" 
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        xmlns:my="clr-namespace:Lygl.UI.Controls"
xmlns:menutype="clr-namespace:Lygl.UI.Shell"
    WindowState="Minimized" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" 
    >
    
    <!--xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"-->
	<Window.Resources>
		<!--<DataTemplate x:Key="DataTemplate1">
			<Grid>
				<Button Content="{Binding Path=Label}" cal:Message.Attach="[Click]=[Execute]" IsEnabled="{Binding Path=CanExecute}"/>
			</Grid>
		</DataTemplate>-->
         
        <!--<ControlTemplate x:Key="mymenuitemcontroltemplate" TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <ContentPresenter
          Margin="10"
          ContentSource="Header"
          RecognizesAccessKey="True"/>
                    <Popup
                    AllowsTransparency="True"
          Name="Popup"
          Placement="Top"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          Focusable="False"
          PopupAnimation="Slide">
                        <Border
            CornerRadius="30"
            Name="SubmenuBorder"
            SnapsToDevicePixels="True">
                            <StackPanel
              IsItemsHost="True"
              KeyboardNavigation.DirectionalNavigation="Cycle" />
                            <Border.Background>
                                <DrawingBrush>
                                    <DrawingBrush.Drawing>
                                        <GeometryDrawing Brush="YellowGreen">
                                            <GeometryDrawing.Geometry>
                                                <CombinedGeometry GeometryCombineMode="Exclude">
                                                    <CombinedGeometry.Geometry1>
                                                        <EllipseGeometry RadiusX="20" RadiusY="20"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <EllipseGeometry RadiusX="10" RadiusY="10"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Border.Background>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
        </ControlTemplate>-->

        <!--<Style x:Name="MenuItemContaionerStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Header" Value="{Binding Path=CategoryName}"/>
            <Setter Property="cal:Message.Attach" Value="Execute"/>
        </Style>-->

        
        <!-- 第一级数据直接绑定到menu数据集的根集，根集直接由menu对象绑定直接指明，这个模板就是批定根项的，这
        个根项中再指明它的子项的itemsource，和子项级联的itemTemplate，以及当前项的显示内容-->
        <HierarchicalDataTemplate DataType="{x:Type menutype:MenuCategoryItem}" ItemsSource="{Binding MenuSubItems}"    >
            <HierarchicalDataTemplate.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="IsEnabled"  Value="{Binding CanExecute}"/>
                    <Setter Property="Foreground" Value="Navy" />
                    <Setter Property="Header" Value="{Binding Label}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" cal:Message.Attach="[MouseLeftButtonUp]=[Execute]">
                                    <Grid>

                                        <!-- Grid 用于结合 Icon、Content、Glyph 复选标记和 Arrow 的列，以显示下一个级别
							 Grid 中采用大小共享方式，以便将每个 MenuItem 的 Icon、Content 和 Arrow 一起对齐 -->
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="37" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- ContentPresenter 用来显示 Icon (如果需要) -->
                                        <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                                        <!-- Glyph 是一个复选标记(如果可选中的菜单需要) -->
                                        <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                            <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                        </Grid>

                                        <!-- 菜单文本等内容 -->
                                        <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header"/>

                                        <!-- 箭头绘制的路径，该路径指向菜单的下一个级别 -->
                                        <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                            <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                        </Grid>

                                        <!-- Popup 是向下展开或横向展开(具体取决于该项所处的级别)的菜单的主体 -->
                                        <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                                            <Grid x:Name="SubMenu">
                                                <Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>

                                                <!-- StackPanel 保留菜单的子级。这是通过 IsItemsHost=True 来设置的 -->
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </Grid>
                                        </Popup>

                                    </Grid>
                                </Border>

                                <!-- 这些触发器通过 Role 重新配置 MenuItem 的四种排列方式以显示不同级别的菜单 -->
                                <ControlTemplate.Triggers>

                                    <!-- Role = TopLevelHeader: 这是菜单中的根菜单项；Popup 向下展开 -->
                                    <Trigger Property="Role" Value="TopLevelHeader">
                                        <Setter Property="Margin" Value="0,1,0,1"/>
                                        <Setter Property="Padding" Value="6,3,6,3"/>
                                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                        <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                    </Trigger>

                                    <!-- Role = TopLevelItem:  这是没有任何子项的顶级菜单的子菜单项-->
                                    <Trigger Property="Role" Value="TopLevelItem">
                                        <Setter Property="Margin" Value="0,1,0,1"/>
                                        <Setter Property="Padding" Value="6,3,6,3"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                    </Trigger>

                                    <!-- Role = SubMenuHeader: 这是不包含子级的子菜单项 -->
                                    <Trigger Property="Role" Value="SubmenuHeader">
                                        <Setter Property="DockPanel.Dock" Value="Top"/>
                                        <Setter Property="Padding" Value="0,2,0,2"/>
                                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                    </Trigger>

                                    <!-- Role = SubMenuItem: 这是包含子级的子菜单项-->
                                    <Trigger Property="Role" Value="SubmenuItem">
                                        <Setter Property="DockPanel.Dock" Value="Top"/>
                                        <Setter Property="Padding" Value="0,2,0,2"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                                    </Trigger>
                                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                        <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                                    </Trigger>

                                    <!-- 如果不存在 Icon，我们会折叠 Icon Content -->
                                    <Trigger Property="Icon" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                    </Trigger>

                                    <!-- GlyphPanel 包含 CheckMark -->
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                    </Trigger>

                                    <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                                        <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
                                        <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
                                        <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/>
                                    </Trigger>

                                    <!-- 对 Menu Highlight 和 IsEnabled 使用系统颜色-->
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" TargetName="Border"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </HierarchicalDataTemplate.ItemContainerStyle>
            <TextBlock Text="{Binding CategoryName}"  />
        </HierarchicalDataTemplate>
        <!--x:Key="MenuCategoryItemTemplate" DataType="MenuItem"   ItemTemplate="{StaticResource MenuSubItemTemplate}" -->
    </Window.Resources>	
    <Grid x:Name="BackgroundGrid">
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition/>
    	</Grid.ColumnDefinitions>
        <Rectangle HorizontalAlignment="Stretch" 
               VerticalAlignment="Stretch"
               
               x:Name="background" 
               Stroke="#FFFFFFFF" RadiusX="10" RadiusY="10" StrokeThickness="0">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.763999998569489,0.852999985218048" StartPoint="0.236000001430511,0.146999999880791">
                    <GradientStop Color="#D8289001" Offset="0"/>
                    <GradientStop Color="#DD47C750" Offset="0.283291"/>
                    <GradientStop Color="#E067FFA0" Offset="0.43379"/>
                    <GradientStop Color="#DD43CE5F" Offset="0.582387"/>
                    <GradientStop Color="#D9209E1E" Offset="0.739726"/>
                    <GradientStop Color="#D4227104" Offset="1"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <!--<Path Height="112.04" Stretch="Fill" Data="F1 M 694.771,86.6915C 372.049,86.1408 120.32,38.1835 3.86534,11.1368L 3.86534,90.3688C 125.569,110.66 390.551,144.489 715.916,123.891C 1065.92,101.738 1225.55,70.6142 1282.8,56.6822L 1282.8,46.6835C 1228.53,58.1248 1054.61,87.3102 694.771,86.6915 Z " Opacity="0.4" x:Name="swish2" RenderTransformOrigin="0.5,0.5" Margin="9.923,0,-3.453,20.96" VerticalAlignment="Bottom">
            <Path.Fill>
                <LinearGradientBrush EndPoint="-0.0939999967813492,0.554000020027161" StartPoint="1.02400004863739,0.554000020027161">
                    <GradientStop Color="#FFFFFFFF"/>
                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Path.Fill>
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <SkewTransform AngleX="0" AngleY="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform X="0" Y="0"/>
                </TransformGroup>
            </Path.RenderTransform>
        </Path>
        <Path Stretch="Fill" Data="F1 M 694.771,86.6915C 372.049,86.1408 120.32,38.1835 3.86534,11.1368L 3.86534,90.3688C 125.569,110.66 390.551,144.489 715.916,123.891C 1065.92,101.738 1225.55,70.6142 1282.8,56.6822L 1282.8,46.6835C 1228.53,58.1248 1054.61,87.3102 694.771,86.6915 Z " Opacity="0.4" x:Name="swish1" RenderTransformOrigin="0.5,0.5" Margin="0,0,-11,42.414" VerticalAlignment="Bottom" Height="189.611">
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1"/>
                    <SkewTransform/>
                    <RotateTransform Angle="-4.689"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Path.RenderTransform>
            <Path.Fill>
                <LinearGradientBrush EndPoint="-0.0939999967813492,0.554000020027161" StartPoint="1.02400004863739,0.554000020027161">
                    <GradientStop Color="#FFFFFFFF"/>
                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Path.Fill>
        </Path>-->
        <!--<Rectangle x:Name="Bevel1" Height="50" Stretch="Fill" Margin="0,55,-11,0" VerticalAlignment="Top" HorizontalAlignment="Stretch">
            <Rectangle.Fill>
                <RadialGradientBrush RadiusX="0.581323" RadiusY="0.765929" Center="0.476028,0.0756137" GradientOrigin="0.476028,0.0756137">
                    <RadialGradientBrush.RelativeTransform>
                        <TransformGroup/>
                    </RadialGradientBrush.RelativeTransform>
                    <GradientStop Color="#63253E0C" Offset="0"/>
                    <GradientStop Color="#00508E50" Offset="1"/>
                </RadialGradientBrush>
            </Rectangle.Fill>
        </Rectangle>-->
       
        
        <!--<Image Source="/Resources/Images/backgroundshadow.png"
		       Stretch="Fill" Margin="0,4,-11,0" />-->
        <Grid x:Name="LayoutRoot" Margin="0,0,0,0">
            <Grid.Resources>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </Grid.Resources>

            <DockPanel>
                <Grid DockPanel.Dock="Top" Height="28">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="206" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <Menu x:Name="MainMenu"   Grid.ColumnSpan="2"   Margin="0" />
                    <!--ItemTemplate="{DynamicResource MenuCategoryItemTemplate}"-->
                   <!--Text="陵园管理系统"-->
                    <TextBlock x:Name="Title"
			           Margin="0,2,11,2"
			           FontSize="18"
			           FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Right" Width="119" />
                    <!--ItemsSource="MainMenu.MenuCategoryItems" -->
                </Grid>
                <!--<StackPanel>
                    <StackPanel Margin="5">
                        <Expander Header="功能" Height="100" IsExpanded="True">
                            <ListBox x:Name="NaviList" Height="100" Width="100" ItemTemplate="{DynamicResource DataTemplate1}" />
                        </Expander>
                        <ListBox Opacity=".65">
                            <ListBoxItem>
                                <TextBlock x:Name="CurrentUser" 
                         Text="Not logged in" 
                         Foreground="Blue"
                         FontSize="12"
                         />
                            </ListBoxItem>
                          
                        </ListBox>
                    </StackPanel>

                </StackPanel>-->
                <DockPanel  x:Name="contentArea" >
                    
                    <ContentControl x:Name="ActiveItem" ></ContentControl>
                   
                </DockPanel>
            </DockPanel>

        </Grid>
        <!--<ContentControl x:Name="Dialogs" 
                        VerticalContentAlignment="Stretch"
                        HorizontalContentAlignment="Stretch">
            
        </ContentControl>-->
    </Grid>

</Window>
